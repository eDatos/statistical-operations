<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd 
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd"
	default-autowire="byName">

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="StatisticalOperationsEntityManagerFactory" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.ejb.cfgfile">hibernate.cfg.xml</prop>
				<prop key="query.substitutions">true 1, false 0</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
			</props>
		</property>
	</bean>

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/jdbc/Operations</value>
		</property>
	</bean>

	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Interceptors -->
	<bean id="jpaInterceptorFlushEager" class="org.springframework.orm.jpa.JpaInterceptor">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<!-- Need to flush to detect OptimisticLockingException and do proper rollback. -->
		<property name="flushEager" value="true" />
	</bean>

	<!-- |_ General Advices -->
	<import resource="classpath:/spring/general-beans-advice.xml" />

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- all methods starting with 'get' or 'find' are read-only -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<!-- all other methods are transactional and ApplicationException will 
				cause rollback -->
			<tx:method name="*" read-only="false"
				rollback-for="org.fornax.cartridges.sculptor.framework.errorhandling.ApplicationException, org.siemac.metamac.core.common.exception.MetamacException" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="serviceFacadePointCut"
			expression="execution(public * org.siemac.metamac.statistical.operations..serviceapi.*ServiceFacade.*(..)) or execution(public * org.siemac.metamac.statistical.operations..ws..*Interface*.*(..))" />
		<!-- Repeating the expression, since I can't find a way to refer to the 
			other pointcuts. -->
		<aop:pointcut id="updatingServiceFacade"
			expression="execution(public * org.siemac.metamac.statistical.operations..serviceapi.*ServiceFacade.*(..)) and not (execution(public * org.siemac.metamac.statistical.operations..serviceapi.*.get*(..)) or execution(public * org.siemac.metamac..serviceapi.*.find*(..)))" />

		<aop:advisor pointcut-ref="serviceFacadePointCut"
			advice-ref="txAdvice" order="1" />
		<aop:advisor pointcut-ref="serviceFacadePointCut"
			advice-ref="serviceContextStoreAdvice" order="2" />
		<aop:advisor pointcut-ref="serviceFacadePointCut"
			advice-ref="errorHandlingAdvice" order="3" />
		<aop:advisor pointcut-ref="serviceFacadePointCut"
			advice-ref="hibernateErrorHandlingAdvice" order="4" />
		<aop:advisor pointcut-ref="updatingServiceFacade"
			advice-ref="jpaInterceptorFlushEager" order="5" />
	</aop:config>

</beans>