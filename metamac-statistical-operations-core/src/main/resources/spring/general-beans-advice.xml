<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="   http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context-3.0.xsd   http://www.springframework.org/schema/aop   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   http://www.springframework.org/schema/jee   http://www.springframework.org/schema/jee/spring-jee-3.0.xsd   http://www.springframework.org/schema/tx   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">  
  
  <!-- If Aspectj-autoproxying is enabled in this way, then any bean defined in your application context with a declared type
  	   that is an @AspectJ aspect will be interpreted as an aspect by Spring AOP and beans in the context will be advised 
  	   accordingly.  -->
  <aop:aspectj-autoproxy/>  
  
  <bean id="errorHandlingAdvice" class="org.fornax.cartridges.sculptor.framework.errorhandling.ErrorHandlingAdvice"/>  
  <bean id="hibernateErrorHandlingAdvice" class="org.fornax.cartridges.sculptor.framework.errorhandling.HibernateErrorHandlingAdvice"/>  
  <bean id="serviceContextStoreAdvice" class="org.fornax.cartridges.sculptor.framework.errorhandling.ServiceContextStoreAdvice"/>  

</beans>
